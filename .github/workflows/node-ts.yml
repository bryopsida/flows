name: Node Typescript QA
on: 
  workflow_call:
    inputs:
      os:
        default: '["ubuntu-latest"]'
        type: string
        required: false
      node_versions:
        default: '["16.x","18.x","20.x"]'
        type: string
        required: false
      continue-on-prod-vulns:
        default: false
        type: boolean
        description: 'Whether to fail the job or continue when vulnerabilities are found in production dependencies'
      working-dir:
        default: '.'
        type: string
        required: false
      sonar-enabled:
        default: true
        type: boolean
        required: false
    secrets:
      SONARQUBE_KEY:
        required: false
        description: Sonarcloud key
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install native dependencies
      run: |
        sudo apt-get install libavahi-compat-libdnssd-dev
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'javascript'
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript"

  build-and-test:
    name: Build And Test
    strategy:
      fail-fast: false
      matrix:
        node-version: ${{ fromJSON( inputs.node_versions ) }}
        os: ${{ fromJson( inputs.os ) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Install native dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get install libavahi-compat-libdnssd-dev
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
        working-directory: ${{ inputs.working-dir }}
      - run: npm run build --if-present
        working-directory: ${{ inputs.working-dir }}
      - run: npm run lint --if-present
        working-directory: ${{ inputs.working-dir }}
      - run: npm audit --omit dev
        continue-on-error: ${{ inputs.continue-on-prod-vulns }}
        working-directory: ${{ inputs.working-dir }}
      - run: npm test
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.node-version == '16.x' }}
        with:
          name: coverage
          path: |
            coverage
  sonar:
    name: Sonar Scan
    runs-on: ubuntu-latest
    if: inputs.sonar-enabled
    needs:
    - build-and-test
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/download-artifact@v4
      with:
        name: coverage
        path: coverage
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONARQUBE_KEY }}
