name: Node Lerna QA
on: 
  workflow_call:
    inputs:
      node_versions:
        default: '{"node-version": ["16.x","18.x","20.x"]}'
        type: string
        required: false
      continue-on-prod-vulns:
        default: false
        type: boolean
        description: 'Whether to fail the job or continue when vulnerabilities are found in production dependencies'
      main-branch-name:
        default: main
        type: string
        description: The default/main branch
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'javascript'
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript"

  build-and-test:
    name: Build And Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON( inputs.node_versions ) }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: lerna bootstrap
      - run: lerna run build --since ${{ inputs.main-branch-name }}
      - run: lerna run lint --since ${{ inputs.main-branch-name }}
      - run: lerna exec "npm audit --omit dev" --since ${{ inputs.main-branch-name }}
        continue-on-error: ${{ inputs.continue-on-prod-vulns }}
      - run: lerna run test --since ${{ inputs.main-branch-name }}
      - uses: actions/upload-artifact@v3
        if: ${{ matrix.node-version == '16.x' }}
        with:
          name: coverage
          path: |
            coverage